// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolFileServer.Data;

#nullable disable

namespace SchoolFileServer.Migrations
{
    [DbContext(typeof(SchoolFileContext))]
    [Migration("20250828144634_MakeDescriptionNullable")]
    partial class MakeDescriptionNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SchoolFileServer.Models.SchoolClass", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassId");

                    b.HasIndex("ClassName")
                        .IsUnique();

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassName = "VI",
                            DisplayName = "Class VI",
                            IsActive = true,
                            SortOrder = 1
                        },
                        new
                        {
                            ClassId = 2,
                            ClassName = "VII",
                            DisplayName = "Class VII",
                            IsActive = true,
                            SortOrder = 2
                        },
                        new
                        {
                            ClassId = 3,
                            ClassName = "VIII",
                            DisplayName = "Class VIII",
                            IsActive = true,
                            SortOrder = 3
                        },
                        new
                        {
                            ClassId = 4,
                            ClassName = "IX",
                            DisplayName = "Class IX",
                            IsActive = true,
                            SortOrder = 4
                        },
                        new
                        {
                            ClassId = 5,
                            ClassName = "X",
                            DisplayName = "Class X",
                            IsActive = true,
                            SortOrder = 5
                        },
                        new
                        {
                            ClassId = 6,
                            ClassName = "XI",
                            DisplayName = "Class XI",
                            IsActive = true,
                            SortOrder = 6
                        },
                        new
                        {
                            ClassId = 7,
                            ClassName = "XII",
                            DisplayName = "Class XII",
                            IsActive = true,
                            SortOrder = 7
                        });
                });

            modelBuilder.Entity("SchoolFileServer.Models.SchoolFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("FileId");

                    b.HasIndex("UploadDate");

                    b.HasIndex("UploadedBy");

                    b.HasIndex("Class", "Subject");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("SchoolFileServer.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ClassId", "SubjectName")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolFileServer.Models.UserAccount", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedClasses")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AssignedClasses = "[\"VI\",\"VII\",\"VIII\",\"IX\",\"X\",\"XI\",\"XII\"]",
                            CreatedDate = new DateTime(2025, 8, 28, 20, 16, 32, 859, DateTimeKind.Local).AddTicks(3199),
                            IsActive = true,
                            PasswordHash = "$2a$11$ywQtQ1YjbJ188KXBe9gaUusKVUcENotWro9q26hTVUG.XX9JPhjzm",
                            UserType = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("SchoolFileServer.Models.SchoolFile", b =>
                {
                    b.HasOne("SchoolFileServer.Models.UserAccount", "UploadedByUser")
                        .WithMany("UploadedFiles")
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("SchoolFileServer.Models.Subject", b =>
                {
                    b.HasOne("SchoolFileServer.Models.SchoolClass", "Class")
                        .WithMany("Subjects")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolFileServer.Models.UserAccount", "CreatedByUser")
                        .WithMany("CreatedSubjects")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("SchoolFileServer.Models.SchoolClass", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SchoolFileServer.Models.UserAccount", b =>
                {
                    b.Navigation("CreatedSubjects");

                    b.Navigation("UploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
